// --------------------------------------------------------------
// griz classes

.grid {
    @extend %grid-setup;
    @extend %grid-template--full;
    grid-column: full;
    * {
        grid-column: main;
        margin-top:    0;
        margin-bottom: 0;
    }
}

// Major columns

.grid--layer {
    @extend %grid-setup;
    grid-column: full;
}
.grid--overmain {
    @extend %grid-setup;
    grid-column: overmain;
}

// Minor columns

.grid--side {
    @extend %grid-setup;
    grid-column: overside;
}
.grid--side-screen {
    @extend %grid-setup;
    grid-column: overside-start / full-end;
}
.grid--menu {
    @extend %grid-setup;
    grid-column: overmenu;
}
.grid--menu-screen {
    @extend %grid-setup;
    grid-column: full-start / overmenu-end;
}

// Merge columns

.grid--merge {
    @extend %grid-setup;
    grid-column: overmenu-start / overside-end;
}
.grid--merge-menu {
    @extend %grid-setup;
    grid-column: overmenu-start / overmain-end;
}
.grid--merge-side {
    @extend %grid-setup;
    grid-column: overmain-start / overside-end;
}
.grid--merge-menu-screen {
    @extend %grid-setup;
    grid-column: full-start / overmain-end;
}
.grid--merge-side-screen {
    @extend %grid-setup;
    grid-column: overmain-start / full-end;
}

// Keep grid

.grid--keep {
    @extend %grid-setup;

    // in single mode keep main column (for vertical gap)

    grid-template-columns: $grid-template-columns--main;

    // with grid components - keep grid layout for childrens (for background properties)

    @media all and ($screenNotCompactGrid) {
        &.grid--layer { grid-template-columns: $grid-template-columns--full; }
        &.grid--merge { grid-template-columns: $grid-template-columns--merge; }
        &.grid--merge-menu { grid-template-columns: $grid-template-columns--merge-menu; }
        &.grid--merge-side { grid-template-columns: $grid-template-columns--merge-side; }
        &.grid--merge-menu-screen { grid-template-columns: $grid-template-columns--merge-menu-screen; }
        &.grid--merge-side-screen { grid-template-columns: $grid-template-columns--merge-side-screen; }
    }
    @media all and ($screenForCompactGrid) {
        &.grid--layer,
        &.grid--merge,
        &.grid--merge-menu,
        &.grid--merge-menu-screen,
        &.grid--merge-side,
        &.grid--merge-side-screen
        {
            grid-template-columns: $grid-template-columns--overmain;
        }
    }
}

// Halves

.grid--half-one {
    @extend %grid-setup;
    grid-template-columns: $grid-template-columns--short;
    grid-column: main-start / midpoint;
}
.grid--half-two {
    @extend %grid-setup;
    grid-template-columns: $grid-template-columns--short;
    grid-column: midpoint / main-end;
}
.grid--half-screen-one {
    @extend %grid-setup;
    grid-template-columns: $grid-template-columns--overmain-cut-one;
    grid-column: full-start / midpoint;
}
.grid--half-screen-two {
    @extend %grid-setup;
    grid-template-columns: $grid-template-columns--overmain-cut-two;
    grid-column: d / full-end;
}

// Alignment

.is-v-centered {
    align-self: center;
}
.has-v-centered {
    &>* { align-self: center; }
}
.has-v-slices {
    grid-row-gap: 0;
}



// --------------------------------------------- PENDING

.grid--chapter {
    @extend .grid;
    $grid-settings--column-gap: $grid-settings--column-gap; // 1rem
    padding-top:    1*$grid-settings--column-gap;
    padding-bottom: 1*$grid-settings--column-gap;
}
.grid--as-main {
    grid-template-columns: $grid-template-columns--main;
}
.grid--as-overmain {
    grid-template-columns: $grid-template-columns--overmain;
}




[chapter]           { @extend .grid--chapter; }
[layer]             { @extend .grid--layer; }
[overmain]          { @extend .grid--overmain; }


.grid:hover *:not(.box):not(.img) { background-color: $colorShy; }


[half-left] { grid-column: main-start / midpoint; }
[half-right] { grid-column: midpoint / main-end; }
[halfscreen] { grid-column: full-start / midpoint; }
[halfscreen-right] { grid-column: midpoint / full-end; }
[side] { grid-column: side; }
[side-screen] { grid-column: side-start / full-end; }
[menu] { grid-column: menu; }
[menu-screen] { grid-column: full-start / menu-end; }
[merge] { grid-column: menu-start / side-end; }


.box {
    $grid-settings--column-gap: $grid-settings--column-gap; // 1rem
    padding-top:    1*$grid-settings--column-gap;
    padding-bottom: 1*$grid-settings--column-gap;
    background-color: firebrick;
    color: white;
    &.badbox {
        background-color: indigo;
    }
    &.altbox {
        background-color: darkslategrey;
    }
}
[box] { @extend .box; }

.small {
    font-size: 0.8em;
}
[small] { @extend .small; }