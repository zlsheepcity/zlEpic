/* ==============================================================
    app sass constructor - mixins and templates
    2019.1.16
============================================================== */
/* eof app scss constructor */
/* ==============================================================
    required settings app6011
    2019.1.16
============================================================== */
/* eof required settings */
/* ==============================================================
    all about font-sizes and line-heights
    2019.1.16
============================================================== */
body {
  /* 16/28 */
  font-size: 16px;
  line-height: 1.75;
  font-family: Vollkorn, et-book, Palatino, "Palatino Linotype", "Palatino LT STD", "Book Antiqua", Georgia, serif;
  font-weight: 400; }

h1, h2, h3, h4, h5, h6, p, blockquote {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  font-weight: inherit; }

h1, .big-title {
  /* 40/48 */
  font-size: 2.5em;
  line-height: 1.2; }

h2, .title {
  /* 32/40 */
  font-size: 2em;
  line-height: 1.25; }

h3, .min-title {
  /* 24/32 */
  font-size: 1.5em;
  line-height: 1.333333; }

.subtitle {
  /* 20/24 */
  font-size: 1.25em;
  line-height: 1.2; }

small {
  /* 14/28 */
  font-size: 0.875em;
  line-height: 2; }

td {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  /* 14/24 */
  font-size: 0.875em;
  line-height: 1.714285; }

.has-text-accent {
  font-weight: 400;
  /* 24/36 */
  font-size: 1.5em;
  line-height: 1.5; }

.has-small-text {
  /* 14/24 */
  font-size: 0.875em;
  line-height: 1.714285; }

.has-sans-text {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  letter-spacing: .03em;
  /* 14/24 */
  font-size: 0.875em;
  line-height: 1.714285; }

@supports (hanging-punctuation: first) {
  * {
    hanging-punctuation: first; } }

html {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%; }

body {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased; }

/* eof typography */
/* ==============================================================
    base html markup
    2019.1.23
============================================================== */
/* ------------------------------------ minimal box model */
*, *:before, *:after {
  box-sizing: inherit; }

html {
  box-sizing: border-box;
  height: 100%; }

html, body {
  margin: 0;
  padding: 0; }

/* ------------------------------------ basic unit & font sizes */
html {
  font-size: 10px; }

body {
  font-size: 16px;
  line-height: 1.5; }

/* ------------------------------------ improve design & UX */
html {
  cursor: default; }

body {
  overflow-y: scroll; }

a, area, button, input, label, select, summary, textarea, [tabindex] {
  -ms-touch-action: manipulation;
  touch-action: manipulation; }

/* ------------------------------------ avoid visual errors */
img, svg {
  max-width: 100%; }

canvas {
  display: inline-block; }

/* ----------------- use semantic markup without browser`s design */
nav ul, nav ol, ul.nav, ol.nav {
  padding: 0;
  margin: 0;
  list-style-type: none; }

figure, figcaption, fieldset, legend {
  display: block;
  margin: 0;
  padding: 0;
  border: 0;
  white-space: normal; }

article, section, header, footer, main, aside, nav, details {
  display: block; }

summary {
  display: list-item; }

h1, h2, h3, h4, h5, h6, p, blockquote, ul, ol {
  margin: 0;
  padding: 0; }

a {
  color: inherit;
  background-color: transparent;
  text-decoration: underline; }

ul, ol {
  margin-left: 1.5em; }

hr {
  border: 0;
  background: transparent;
  box-shadow: none;
  /* use as visual spacer */
  display: block;
  font-size: inherit;
  min-height: 1.5em; }

figure {
  display: block;
  padding: 0;
  margin: 0; }

img {
  display: inline-block;
  vertical-align: middle;
  border: none;
  max-width: 100%; }

svg {
  display: inline-block;
  vertical-align: middle;
  border: none;
  max-width: 100%; }

table * {
  text-align: left;
  vertical-align: top; }
table td {
  padding-top: 0.8rem;
  padding-bottom: 0.8rem; }

[hidden], .hidden {
  display: none !important; }

.form-item, .form-textarea, .form-submit {
  /* has rows */
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: flex-start;
  align-items: stretch;
  align-content: center; }
  .form-item > *, .form-textarea > *, .form-submit > * {
    order: 3; }
  .form-item > label, .form-textarea > label, .form-submit > label {
    order: 1; }
  .form-item > input, .form-textarea > input, .form-submit > input {
    order: 2; }

label {
  display: block;
  padding: 0 0.25em; }

input {
  display: block;
  width: 100%;
  padding: 0.25em 0.25em;
  /* default font */
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

textarea {
  display: block;
  width: 100%;
  padding: 0.25em;
  resize: vertical;
  /* default font */
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

button, .button, .is-button {
  display: inline-block;
  vertical-align: middle;
  padding: 0.25em 0.25em;
  /* default font */
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

/* ------------------------------------------ univeral helpers */
.is-centered {
  text-align: center;
  justify-content: center; }

.is-v-centered {
  align-self: center; }

.has-v-centered > * {
  align-self: center; }

.is-v-equal {
  align-self: stretch; }

.has-v-equal > * {
  align-self: stretch; }

.has-v-slices {
  grid-row-gap: 0; }

.is-v-spaced {
  margin-top: 2rem;
  margin-bottom: 2rem; }

.is-v-padded {
  padding-top: 2.4rem;
  padding-bottom: 2.4rem; }

.is-box {
  padding-top: 2rem;
  padding-bottom: 2rem;
  background-color: rgba(0, 0, 0, 0.1); }

.has-shadow-overlay, .has-active-sidebar {
  overflow: hidden; }
  .has-shadow-overlay .screen-shadow-overlay, .has-active-sidebar .screen-shadow-overlay {
    opacity: 0.8;
    pointer-events: auto; }

.screen-shadow-overlay {
  background-color: black;
  position: fixed;
  z-index: 2;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  pointer-events: none;
  opacity: 0; }

/**/
/* eof base html markup */
/* ==============================================================
    box model for HTML & BODY
    2018.12.7
============================================================== */
.body-wrap {
  min-height: 100%;
  margin-top: 0;
  margin-bottom: 0;
  display: flex;
  flex-direction: column; }

.body-wrap-header {
  background-color: white;
  position: sticky;
  top: 0; }

.body-wrap-footer {
  margin-top: auto; }

/* eof body wrap */
/* ==============================================================
    split fullscreen into parts header/body/footer
    2019.1.16
============================================================== */
/* html template

    <section class="fullscreen">
        <header class="fullscreen-header"></header>
        <div    class="fullscreen-body"  ></div>
        <footer class="fullscreen-footer"></footer>
    </section>

*/
.fullscreen {
  /* is fullscreen box */
  display: block;
  width: 100%;
  min-height: 100vh;
  /* has illustrated background */
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  /* has rows */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-content: stretch;
  align-items: stretch;
  /* contentbox--xy-centered */ }
  .fullscreen .fullscreen-header {
    order: 1;
    flex-grow: 0; }
  .fullscreen .fullscreen-body {
    order: 2;
    flex-grow: 2; }
  .fullscreen .fullscreen-footer {
    order: 3;
    flex-grow: 0; }
  .fullscreen .fullscreen-body,
  .fullscreen .fullscreen-footer {
    display: flex;
    justify-content: center;
    align-items: center;
    align-content: center; }

/* eof fullscreen */
/* ==============================================================
    column solution
    2018.12.8
============================================================== */
.group {
  /* is horizontal grid */
  display: grid;
  grid-template-columns: none;
  grid-auto-flow: column;
  grid-auto-rows: 1fr;
  grid-gap: 2.4rem;
  /* has overflow fallback */
  overflow: auto; }
  .group > *, .group .is-in-group {
    grid-column: auto;
    height: 100%; }

/* eof sidebar */
/* ==============================================================
    fixed sidebar with visible and hidden states
    2019.1.28
============================================================== */
/* USE CASE
    <nav class="sidebar is-active">
        xoxox
    </nav>
*/
.sidebar {
  background-color: black;
  /* is screen fixed */
  position: fixed;
  z-index: 3;
  top: 0;
  bottom: 0;
  left: 100%;
  /* has width */
  width: 100%;
  /* has unpredictable content */
  overflow: auto;
  /* closed state */
  transform: translateX(0);
  transition: transform 200ms ease-in;
  /* open state */ }
  @media screen and (min-width: 44rem) {
    .sidebar {
      max-width: 38rem; } }
  .sidebar.is-active, .has-active-sidebar .sidebar {
    transition-timing-function: ease-out;
    transform: translateX(-100%); }

/* Mod: use shadow overlay */
/* eof sidebar */
/*

$zetka-full               -[][menu][][][main][][][side][]-
$zetka-main                            [main]
$zetka-main-limitless                 [-main-]
$zetka-overmain                      [][main][]
$zetka-overmain-limitless           [][-main-][]
$zetka-overmain-spaced              -[][main][]-
$zetka-overmain-spaced-menu         -[][main][]
$zetka-overmain-spaced-side          [][main][]-

$zetka-side-spaced                             [][side][]-
$zetka-menu-spaced        -[][menu][]

$zetka-merge               [][menu][][][main][][][side][]
$zetka-merge-menu                    [][main][][][side][]
$zetka-merge-side          [][menu][][][main][]
$zetka-merge-menu-screen             [][main][][][side][]-
$zetka-merge-side-screen  -[][menu][][][main][]

$zetka-overmain-half-one             [][ma
$zetka-overmain-half-two                  in][]
$zetka-overmain-half-screen-one     -[][ma
$zetka-overmain-half-screen-two           in][]-
$zetka-half-screen-one    -[][menu][][][ma
$zetka-half-screen-two                    in][][][side][]-

*/
.zetka, .zetka-layer, .zetka-overmain, .zetka-block, .zetka-menu, .zetka-side, .zetka-merge, .zetka-merge-menu, .zetka-merge-side, .zetka-menu-screen, .zetka-side-screen, .zetka-merge-menu-screen, .zetka-merge-side-screen, .zetka-half-screen-one, .zetka-half-screen-two, .zetka-overhalf-one, .zetka-overhalf-two, .zetka-half-one, .zetka-half-two, .zetka-third-one, .zetka-third-two, .zetka-third-tri, .zetka-third-merge-one, .zetka-third-merge-tri {
  display: grid;
  align-items: start;
  grid-auto-flow: row;
  grid-auto-rows: min-content;
  grid-column-gap: 1rem;
  grid-row-gap: 1rem; }

.zetka * {
  grid-column: main;
  margin-top: 0;
  margin-bottom: 0; }

.zetka {
  grid-column: full;
  grid-template-columns:  [  full-start  ]  minmax(0, 1fr)  [  overmenu-start  ]  1rem  [  menu-start  ]  16vw  [  menu-end  ]  1rem  [  overmenu-end overmain-start  ]  1rem  [  main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g  ]  1rem  [  overmain-end overside-start  ]  1rem  [  side-start  ]  16vw  [  side-end  ]  1rem  [  overside-end  ]  minmax(0, 1fr)  [  full-end  ] ; }

.zetka-layer {
  grid-column: full;
  grid-template-columns:  [  full-start  ]  minmax(0, 1fr)  [  overmenu-start  ]  1rem  [  menu-start  ]  16vw  [  menu-end  ]  1rem  [  overmenu-end overmain-start  ]  1rem  [  main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g  ]  1rem  [  overmain-end overside-start  ]  1rem  [  side-start  ]  16vw  [  side-end  ]  1rem  [  overside-end  ]  minmax(0, 1fr)  [  full-end  ] ; }

.zetka-overmain {
  grid-column: overmain;
  grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

.zetka-block {
  grid-column: overmain;
  grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

.zetka-menu {
  grid-column: overmenu;
  grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

.zetka-side {
  grid-column: overside;
  grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

.zetka-merge {
  grid-column: overmenu-start / overside-end;
  grid-template-columns:  [  full-start overmenu-start  ]  1rem  [  menu-start  ]  16vw  [  menu-end  ]  1rem  [  overmenu-end overmain-start  ]  1rem  [  main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g  ]  1rem  [  overmain-end overside-start  ]  1rem  [  side-start  ]  16vw  [  side-end  ]  1rem  [  overside-end full-end  ] ; }

.zetka-merge-menu {
  grid-column: overmenu-start / overmain-end;
  grid-template-columns:  [  full-start overmenu-start  ]  1rem  [  menu-start  ]  16vw  [  menu-end  ]  1rem  [  overmenu-end overside-start overmain-start  ]  1rem  [  side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end  ]  1rem  [  overmain-end overside-end full-end  ] ; }

.zetka-merge-side {
  grid-column: overmain-start / overside-end;
  grid-template-columns:  [  full-start overmenu-start overmain-start  ]  1rem  [  menu-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g menu-end  ]  1rem  [  overmain-end overmenu-end overside-start  ]  1rem  [  side-start  ]  16vw  [  side-end  ]  1rem  [  overside-end full-end  ] ; }

.zetka-menu-screen {
  grid-column: full-start / overmenu-end;
  grid-template-columns:  [  full-start  ]  minmax(0, 1fr)  [  overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a b c d e f g midmenu midpoint midside  ]  16vw  [  main-end side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

.zetka-side-screen {
  grid-column: overside-start / full-end;
  grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a b c d e f g midmenu midpoint midside  ]  16vw  [  main-end side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end  ]  minmax(0, 1fr)  [  full-end  ] ; }

.zetka-merge-menu-screen {
  grid-column: full-start / overmain-end;
  grid-template-columns:  [  full-start  ]  minmax(0, 1fr)  [  overmenu-start  ]  1rem  [  menu-start  ]  16vw  [  menu-end  ]  1rem  [  overmenu-end overside-start overmain-start  ]  1rem  [  side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end  ]  1rem  [  overmain-end overside-end full-end  ] ; }

.zetka-merge-side-screen {
  grid-column: overmain-start / full-end;
  grid-template-columns:  [  full-start overmenu-start overmain-start  ]  1rem  [  menu-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g menu-end  ]  1rem  [  overmain-end overmenu-end overside-start  ]  1rem  [  side-start  ]  16vw  [  side-end  ]  1rem  [  overside-end  ]  minmax(0, 1fr)  [  full-end  ] ; }

.zetka-half-screen-one {
  grid-column: full-start / midpoint;
  grid-template-columns:  [  full-start  ]  minmax(0, 1fr)  [  overmenu-start  ]  1rem  [  menu-start  ]  16vw  [  menu-end  ]  1rem  [  overmenu-end overmain-start overside-start  ]  1rem  [  side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  d midmenu midpoint midside e f g main-end side-end overmain-end overside-end full-end  ] ; }

.zetka-half-screen-two {
  grid-column: d / full-end;
  grid-template-columns:  [  full-start overmenu-start overmain-start menu-start main-start a b c d midmenu midpoint midside  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  g main-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-start  ]  1rem  [  side-start  ]  16vw  [  side-end  ]  1rem  [  overside-end  ]  minmax(0, 1fr)  [  full-end  ] ; }

.zetka-overhalf-one {
  grid-column: overmain-start / midpoint;
  grid-template-columns:  [  full-start overmenu-start overmain-start overside-start  ]  1rem  [  side-start main-start menu-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  d midmenu midpoint midside e f g main-end side-end menu-end overmain-end overside-end overmenu-end full-end  ] ; }

.zetka-overhalf-two {
  grid-column: d / overmain-end;
  grid-template-columns:  [  full-start overmenu-start overmain-start overside-start menu-start main-start side-start a b c d midmenu midpoint midside  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  g main-end menu-end side-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

.zetka-half-one {
  grid-column: main-start / midpoint;
  grid-template-columns:  [  full-start overmain-start overside-start overmenu-start menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g menu-end side-end overmain-end overside-end overmenu-end full-end  ] ; }

.zetka-half-two {
  grid-column: d / main-end;
  grid-template-columns:  [  full-start overmain-start overside-start overmenu-start menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g menu-end side-end overmain-end overside-end overmenu-end full-end  ] ; }

.zetka-third-one {
  grid-column: a / span 2;
  grid-template-columns:  [  full-start overmain-start overside-start overmenu-start menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g menu-end side-end overmain-end overside-end overmenu-end full-end  ] ; }

.zetka-third-two {
  grid-column: c / span 2;
  grid-template-columns:  [  full-start overmain-start overside-start overmenu-start menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g menu-end side-end overmain-end overside-end overmenu-end full-end  ] ; }

.zetka-third-tri {
  grid-column: e / span 2;
  grid-template-columns:  [  full-start overmain-start overside-start overmenu-start menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g menu-end side-end overmain-end overside-end overmenu-end full-end  ] ; }

.zetka-third-merge-one {
  grid-column: a / span 4;
  grid-template-columns:  [  full-start overmain-start overside-start overmenu-start menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g menu-end side-end overmain-end overside-end overmenu-end full-end  ] ; }

.zetka-third-merge-tri {
  grid-column: c / span 4;
  grid-template-columns:  [  full-start overmain-start overside-start overmenu-start menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g menu-end side-end overmain-end overside-end overmenu-end full-end  ] ; }

@media (max-width: 900px) {
  .zetka,
  .zetka-layer {
    grid-template-columns:  [  full-start  ]  minmax(0, 1fr)  [  overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end  ]  minmax(0, 1fr)  [  full-end  ] ; }

  .zetka-merge,
  .zetka-merge-menu,
  .zetka-merge-side {
    grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

  .zetka-menu-screen,
  .zetka-merge-menu-screen {
    grid-template-columns:  [  full-start  ]  minmax(0, 1fr)  [  overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

  .zetka-side-screen,
  .zetka-merge-side-screen {
    grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

  .zetka-half-screen-one {
    grid-template-columns:  [  full-start  ]  minmax(0, 1fr)  [  overmenu-start overmain-start overside-start  ]  1rem  [  side-start main-start menu-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  d midmenu midpoint midside e f g main-end side-end menu-end overmain-end overside-end overmenu-end full-end  ] ; }

  .zetka-half-screen-two {
    grid-template-columns:  [  full-start overmenu-start overmain-start overside-start menu-start main-start side-start a b c d midmenu midpoint midside  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  g main-end menu-end side-end  ]  1rem  [  overmain-end overmenu-end overside-end  ]  minmax(0, 1fr)  [  full-end  ] ; } }
@media (max-width: 600px) {
  .zetka,
  .zetka-layer,
  .zetka-merge,
  .zetka-merge-menu,
  .zetka-merge-side,
  .zetka-menu-screen,
  .zetka-side-screen,
  .zetka-merge-menu-screen,
  .zetka-merge-side-screen {
    grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

  .zetka-half-screen-one {
    grid-template-columns:  [  full-start overmenu-start overmain-start overside-start  ]  1rem  [  side-start main-start menu-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  d midmenu midpoint midside e f g main-end side-end menu-end overmain-end overside-end overmenu-end full-end  ] ; }

  .zetka-half-screen-two {
    grid-template-columns:  [  full-start overmenu-start overmain-start overside-start menu-start main-start side-start a b c d midmenu midpoint midside  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  g main-end menu-end side-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

  .has-mobile-layout {
    grid-column: overmain;
    grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [b]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [c]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [d midmenu midpoint midside]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [e]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [f]  minmax(0, calc( (700px - (5*1rem)) / 6 ))  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; } }
@media (min-width: 1px) {
  .zetka-as-overmain {
    grid-template-columns:  [  full-start overmain-start overmenu-start overside-start  ]  1rem  [  menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g side-end menu-end  ]  1rem  [  overmain-end overmenu-end overside-end full-end  ] ; }

  .zetka-as-main {
    grid-template-columns:  [  full-start overmain-start overside-start overmenu-start menu-start side-start main-start a  ]  1fr  [b]  1fr  [c]  1fr  [d midmenu midpoint midside]  1fr  [e]  1fr  [f]  1fr  [  main-end g menu-end side-end overmain-end overside-end overmenu-end full-end  ] ; } }
/* EOF zetka columns */
/* ==============================================================
    data table - Responsive Data Tables
    2019.1.17

    table
        .has-data-titles = attr [data-title] will shown on mobile
        .is-perfect = avoit mobile transformation
        data-table-type="1str,2num,3txt" = content type for columns
    td
        .is-string/.is-number = content type alias

============================================================== */
/* EXAMPLE:

    <table class="data-table has-data-titles" data-table-type="1str,2num,3txt">
        <caption>
            <h2>Has markup for data-title</h2>
        </caption>
        <thead>
            <tr>
                <th>Provider</th>
                <th>Games</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th data-title="Provider">
                    Microgaming
                </th>
                <td data-title="Games">
                    590
                </td>
                <td data-title="Description with long value">
                    The game is devoted to the Mighty Scandinavian god Thor, which gives out different symbols, such as Scatter Ram, to help a player win prizes. The option of additional gambling game is also available.
                </td>
            </tr>
        </tbody>
    </table>

*/
.data-table {
  /* table critical css */
  /* table addon - has compact mobile view */
  /* table addon -- has Data Titles */
  /* table addon -- has type of content */ }
  .data-table th,
  .data-table td {
    padding-left: 0.5em;
    padding-right: 0.5em;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    vertical-align: top; }
  .data-table caption,
  .data-table th {
    text-align: left;
    line-height: 1.25; }
  @media all and (min-width: 601px) {
    .data-table th:first-child,
    .data-table td:first-child {
      padding-left: 0.125em; }
    .data-table th:last-child,
    .data-table td:last-child {
      padding-right: 0.125em; } }
  @media all and (max-width: 600px) {
    .data-table:not(.is-perfect),
    .data-table:not(.is-perfect) caption,
    .data-table:not(.is-perfect) thead,
    .data-table:not(.is-perfect) tbody,
    .data-table:not(.is-perfect) tfooter,
    .data-table:not(.is-perfect) tr {
      display: block; }
    .data-table:not(.is-perfect) th,
    .data-table:not(.is-perfect) td {
      display: block;
      text-align: left;
      width: 100%;
      padding-left: 0;
      padding-right: 0;
      border: 0; }
    .data-table:not(.is-perfect)[data-table-type] table tr > * {
      text-align: left; }
    .data-table:not(.is-perfect)[data-table-type] table tr > *:not(th) {
      font-family: inherit; }
    .data-table:not(.is-perfect) thead th {
      text-align: right;
      padding-top: 0;
      padding-bottom: 0; }
    .data-table:not(.is-perfect) tr + tr *:first-child {
      border-top: 2px dashed rgba(0, 0, 0, 0.15);
      margin-top: 1em;
      padding-top: 1em; }
    .data-table:not(.is-perfect) tr:hover {
      background-color: transparent; }
    .data-table:not(.is-perfect)[data-table-type] tr > td, .data-table:not(.is-perfect)[data-table-type] tr > td,
    .data-table:not(.is-perfect) .is-number {
      text-align: left; } }
  @media all and (max-width: 600px) {
    .data-table.has-data-titles:not(.is-perfect) thead {
      display: none; }
    .data-table.has-data-titles:not(.is-perfect) th,
    .data-table.has-data-titles:not(.is-perfect) td {
      font-size: inherit;
      line-height: inherit; }
    .data-table.has-data-titles:not(.is-perfect) th[data-title],
    .data-table.has-data-titles:not(.is-perfect) td[data-title] {
      position: relative;
      padding-left: 8em;
      box-sizing: border-box; }
    .data-table.has-data-titles:not(.is-perfect) th[data-title]:before,
    .data-table.has-data-titles:not(.is-perfect) td[data-title]:before {
      content: attr(data-title) ": ";
      position: absolute;
      display: block;
      margin-left: -8em;
      width: 7.5em; } }
  .data-table[data-table-type*="1num"] tr > *:nth-child(1), .data-table[data-table-type*="2num"] tr > *:nth-child(2), .data-table[data-table-type*="3num"] tr > *:nth-child(3), .data-table[data-table-type*="4num"] tr > *:nth-child(4), .data-table[data-table-type*="5num"] tr > *:nth-child(5),
  .data-table .is-number {
    text-align: right; }
  .data-table[data-table-type*="1num"] tr > *:not(th):nth-child(1), .data-table[data-table-type*="2num"] tr > *:not(th):nth-child(2), .data-table[data-table-type*="3num"] tr > *:not(th):nth-child(3), .data-table[data-table-type*="4num"] tr > *:not(th):nth-child(4), .data-table[data-table-type*="5num"] tr > *:not(th):nth-child(5),
  .data-table .is-number:not(th) {
    font-family: monospace; }
  @media all and (min-width: 601px) {
    .data-table[data-table-type*="1str"] tr > *:not(th):nth-child(1), .data-table[data-table-type*="2str"] tr > *:not(th):nth-child(2), .data-table[data-table-type*="3str"] tr > *:not(th):nth-child(3), .data-table[data-table-type*="4str"] tr > *:not(th):nth-child(4), .data-table[data-table-type*="5str"] tr > *:not(th):nth-child(5),
    .data-table .is-string:not(th) {
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden; } }

/* eof data table */
