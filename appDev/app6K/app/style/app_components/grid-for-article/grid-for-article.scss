/* grid for article layout (main+aside+extra) */
/* 2018.12.5 */


//* ------------------------------------ dependencies


$margin-def:  $margin-def;  // 2.4rem
$margin-less: $margin-less; // 1.6rem
$screenNotTablet: $screenNotTablet;
$screenForTablet: $screenForTablet;


//* ------------------------------------ setup


$grid-settings--main-maximum: 40em;
$grid-settings--aside:        16em;

$screenForArticleLayout: $screenNotTablet;
$screenNotArticleLayout: $screenForTablet;


//* ------------------------------------ code constructor

$grid_formula--base:
    unquote(" [full-start merge-start overmain-start main-start aside-start] ")
        auto
    unquote(" [full-end merge-end overmain-end main-end aside-end] ");

$grid_formula--markup:
    unquote(" [full-start merge-start overmain-start] ")
        $margin-def
            unquote(" [main-start aside-start] ")
                auto
            unquote(" [main-end aside-end] ")
        $margin-def
    unquote(" [full-end merge-end overmain-end] ");

$grid_formula--article:
    unquote(" [full-start] ")
        minmax(0,1fr)
            unquote(" [merge-start overmain-start] ")
                $margin-def
                    unquote(" [main-start] ")
                        minmax( 0, $grid-settings--main-maximum )
                    unquote(" [main-end] ")
                $margin-def
            unquote(" [overmain-end] ")
                $margin-def
                    unquote(" [aside-start] ")
                        $grid-settings--aside
                    unquote(" [aside-end] ")
                $margin-def
            unquote(" [merge-end] ")
        minmax(0,1fr)
    unquote(" [full-end] ");

$grid_formula--article-left-wrapped:
    unquote(" [full-start] ")
        minmax(0,1fr)
            unquote(" [merge-start overmain-start aside-start] ")
                $margin-def
                    unquote(" [main-start] ")
                        minmax( 0, $grid-settings--main-maximum )
                    unquote(" [main-end] ")
                $margin-def
            unquote(" [full-end merge-end overmain-end aside-end] ");

$grid_formula--article-right-wrapped:
    unquote(" [full-start merge-start overmain-start] ")
                $margin-def
                    unquote(" [main-start] ")
                        minmax( 0, $grid-settings--main-maximum )
                    unquote(" [main-end] ")
                $margin-def
            unquote(" [overmain-end] ")
                $margin-def
                    unquote(" [aside-start] ")
                        $grid-settings--aside
                    unquote(" [aside-end] ")
                $margin-def
            unquote(" [merge-end] ")
        minmax(0,1fr)
    unquote(" [full-end] ");


//* ------------------------------------ grid templates


%grid_layout--base {
    display: grid;
    grid-auto-rows: min-content;
    grid-auto-flow: row;
    grid-template-columns: $grid_formula--base;
    align-items: start;
    grid-gap: $margin-less 0;
}
%grid_layout-for-markup {
    @extend %grid_layout--base;
    grid-template-columns: $grid_formula--markup;
}
%grid_layout-for-article {
    @extend %grid_layout--base;
    @media ($screenNotArticleLayout) {
        grid-template-columns: $grid_formula--markup;
    }
    @media ($screenForArticleLayout) {
        grid-template-columns: $grid_formula--article;
    }
}
@mixin grid_layout--components {
    &>* {
        grid-column: main;
        margin-top: 0;
        margin-bottom: 0;
    }
    &>.layer         { grid-column: full; }
    &>.block         { grid-column: overmain; }
    &>.aside         { grid-column: aside; }
    &>.merge         { grid-column: merge; }
    &>.illustration  { grid-column: overmain; }
}
.grid-for-markup  {
    @extend %grid_layout-for-markup;
    @include grid_layout--components;
}
.grid-for-article {
    @extend %grid_layout-for-article;
    @include grid_layout--components;
}


//* ------------------------------------ grid components


.grid {
    @extend %grid_layout-for-article;
    @include grid_layout--components;
}
.block {
    @extend %grid_layout-for-markup;
    @include grid_layout--components;
}
.aside {
    @media ($screenForArticleLayout) {
        &.has-block {
            height: 0;
            overflow: visible;
            margin-left:  -$margin-def;
            margin-right: -$margin-def;
        }
    }
}


//* --- wrap cells
.left-wrap-in-grid {
    @extend %grid_layout-for-markup;
    @include grid_layout--components;
    grid-column: full-start / overmain-end;
}
.right-wrap-in-grid {
    @extend %grid_layout-for-markup;
    @include grid_layout--components;
    grid-column: overmain-start / full-end;
}
/**/


//* ------------------------------------ pending


//* --- two columns
%grid_layout--type-ab {
    display: grid;
    grid-template-columns: auto auto;
    grid-gap: $margin-def;
    &>*{ grid-column: auto; }
}
.has-two-columns {
    @extend %grid_layout--type-ab;
    &>.block { grid-column: auto; }
}
/**/



/* eof grid for article */
